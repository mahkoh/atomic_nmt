<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader"><![CDATA[{
  "useNewFormat": true
}]]></component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="fcb517fc-07ce-4b71-9aec-274beef04e31" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/lazy_transform.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Cargo.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/benches/my_benchmark.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/examples/bench_arc.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/examples/example1.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/generic/mod.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/lib.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/rseq/abort_on_panic.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/rseq/assert_linux_x64.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/rseq/atomic.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/rseq/mod.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/rseq/num_cpus.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/rseq/per_cpu_rc.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/rseq/per_cpu_thread.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/rseq/rseq.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src_old/lib.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src_old/v000_st_naive.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src_old/v005_st_is_some.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src_old/v010_mt_naive.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src_old/v015_mt_is_some.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src_old/v020_mt_atomic_ptr.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src_old/v025_mt_atomic_ptr.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src_old/v030_mt_atomic_ptr.rs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src_old/v035_mt_atomic_ptr.rs" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Rust File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$USER_HOME$/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.4.0/src/lib.rs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$USER_HOME$/.cargo/registry/src/github.com-1ecc6299db9ec823/dashmap-5.4.0/src/mapref/entry.rs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$USER_HOME$/.cargo/registry/src/github.com-1ecc6299db9ec823/flume-0.10.14/src/lib.rs" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="954izxz1" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2FB6iyWgLiJ6CVdfdMnQfOg4iT2" />
  <component name="ProjectViewState">
    <option name="foldersAlwaysOnTop" value="false" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.cidr.known.project.marker": "true",
    "WebServerToolWindowFactoryState": "false",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "last_opened_file_path": "/home/julian/rust/lazy_transform",
    "org.rust.cargo.project.model.PROJECT_DISCOVERY": "true",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/src" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/rseq" />
    </key>
  </component>
  <component name="RunManager" selected="Cargo.Run">
    <configuration name="Bench" type="CargoCommandRunConfiguration" factoryName="Cargo Command" nameIsGenerated="true">
      <option name="command" value="bench" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="emulateTerminal" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Run bench_arc" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="run --release --package lazy_transform --example bench_arc" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="emulateTerminal" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Run example1 release" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --release --package lazy_transform --example example1" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="emulateTerminal" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Run example1" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="run --package lazy_transform --example example1" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="emulateTerminal" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Run" type="CargoCommandRunConfiguration" factoryName="Cargo Command" nameIsGenerated="true">
      <option name="command" value="run" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="emulateTerminal" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test test" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package lazy_transform --lib test -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="emulateTerminal" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test v035_mt_atomic_ptr::test" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package lazy_transform --lib v035_mt_atomic_ptr::test -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="emulateTerminal" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Cargo.Run" />
      <item itemvalue="Cargo.Bench" />
      <item itemvalue="Cargo.Run example1 release" />
      <item itemvalue="Cargo.Run bench_arc" />
      <item itemvalue="Cargo.Run example1" />
      <item itemvalue="Cargo.Test test" />
      <item itemvalue="Cargo.Test v035_mt_atomic_ptr::test" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Cargo.Run bench_arc" />
        <item itemvalue="Cargo.Run example1" />
        <item itemvalue="Cargo.Test test" />
        <item itemvalue="Cargo.Test v035_mt_atomic_ptr::test" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="/usr/bin" />
    <option name="version" value="2" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>